#!/usr/bin/env bash

### /etc/dnf/dnf.conf
if ! grep -q "fastestmirror=" "/etc/dnf/dnf.conf"; then
    echo "fastestmirror=True" >> "/etc/dnf/dnf.conf"
fi
if ! grep -q "max_parallel_downloads=" "/etc/dnf/dnf.conf"; then
    echo "max_parallel_downloads=10" >> "/etc/dnf/dnf.conf"
fi
if ! grep -q "keepcache=" "/etc/dnf/dnf.conf"; then
    echo "keepcache=True" >> "/etc/dnf/dnf.conf"
fi
if ! grep -q "metadata_timer_sync=" "/etc/dnf/dnf.conf"; then
    echo "metadata_timer_sync=0" >> "/etc/dnf/dnf.conf"
fi
###

### /etc/sysctl.conf
if ! grep -q "fs.inotify.max_user_watches=" "/etc/sysctl.conf"; then
    echo "fs.inotify.max_user_watches=524288" >> "/etc/sysctl.conf"
fi
if ! grep -q "vm.max_map_count=" "/etc/sysctl.conf"; then
    echo "vm.max_map_count=262144" >> "/etc/sysctl.conf"
fi
sysctl -p
###

### install base packages
dnf install -y htop git-all most cascadia-code-fonts tmux
###

### install yakuake dropdown terminal
dnf install -y yakuake
ln -s -t /etc/xdg/autostart /usr/share/applications/org.kde.yakuake.desktop
###

### setup git
git config --global status.submodulesummary true
git config --global diff.submodule log
git config --global commit.verbose true
###

### setup vim as default editor
sudo dnf remove -y nano
echo '[ -z "$EDITOR" ] && export EDITOR="/usr/bin/vim"' > /etc/profile.d/vim-default-editor.sh
###

## install docker and docker-compose
curl -fsSL https://get.docker.com | CHANNEL=test sh
sed -i 's/$releasever/32/' /etc/yum.repos.d/docker-ce.repo
dnf install -y docker-ce docker-compose
systemctl enable --now docker
# add current user to docker group (run docker without sudo)
groupadd docker
gpasswd -a $(logname) docker
# ###

# ### RPMFusion and multimedia codecs
# dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
# dnf check-update --refresh
# dnf groupupdate -y core
# dnf groupupdate -y multimedia --setop="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin
# dnf groupupdate -y sound-and-video
# dnf install -y rpmfusion-free-release-tainted
# dnf install -y libdvdcss
# ###

# ### nvidia drivers
# if lspci | grep -Eq 'NVS 5400M|GF108M'; then
#     dnf install -y xorg-x11-drv-nvidia-390xx akmod-nvidia-390xx
#     dnf update -y
#     cp /usr/share/X11/xorg.conf.d/nvidia.conf /etc/X11/xorg.conf.d/nvidia.conf
# fi
# ###
### fix nouveau brightness
if lspci | grep -Eq 'NVS 5400M|GF108M' ; then
grubby --update-kernel=ALL --args="acpi_backlight=video"
fi
###

### tlp
sudo dnf install -y tlp
cat <<EOF > /etc/tlp.d/01-thresholds.conf
START_CHARGE_THRESH_BAT0=40
STOP_CHARGE_THRESH_BAT0=45
EOF
###

### entr
sudo dnf install -y xdotool the_silver_searcher entr
###

# ### media player (requires rpmfusion)
# sudo dnf install -y mpv mpv-mpris
# ###

## Google Chrome
rpm --import https://dl-ssl.google.com/linux/linux_signing_key.pub
dnf -y install https://dl.google.com/linux/direct/google-chrome-stable_current_$(uname -i).rpm
##

## Visual Studio Code
rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo
dnf -y install code
##

# ### DNS configuration - knot-resolver (systemd-resolved as default in Fedora >= 33)
# if ! command -v kresd > /dev/null 2>&1; then
#   dnf install -y knot-resolver
# fi
# echo -e "[main]\ndns=none" > /etc/NetworkManager/conf.d/dns.conf
# echo -e "nameserver 127.0.0.1\n#nameserver 1.1.1.1" > /etc/resolv.conf
# if ! grep -q "TLS_FORWARD" "/etc/knot-resolver/kresd.conf"; then
# cat <<EOF >> /etc/knot-resolver/kresd.conf
# policy.add(policy.all(policy.TLS_FORWARD({
#   {'185.180.206.110', hostname='gbdns.ga'}
# })))
# EOF
# fi
# systemctl disable --now systemd-resolved
# systemctl enable --now kresd@1.service
# ###
